#include <Adafruit_NeoPixel.h>


#define PRIMARY_PIN 4
#define NUM_PIXEL 25

// Parameter 1 = number of pixels in strip
// Parameter 2 = pin number (most are valid)
// Parameter 3 = pixel type flags, add together as needed:
//   NEO_RGB     Pixels are wired for RGB bitstream
//   NEO_GRB     Pixels are wired for GRB bitstream
//   NEO_KHZ400  400 KHz bitstream (e.g. FLORA pixels)
//   NEO_KHZ800  800 KHz bitstream (e.g. High Density LED strip)
Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUM_PIXEL, PRIMARY_PIN, NEO_GRB + NEO_KHZ800);


struct OPERATION {
  uint32_t tick;
  byte saddr;
  byte eaddr;
  byte r;
  byte g;
  byte b; 
};


const OPERATION operations[] PROGMEM = { 
{109, 0x00, 0x00, 0xFF, 0x00, 0x00},
{359, 0x00, 0x00, 0x00, 0x00, 0x00},
{576, 0x01, 0x01, 0x00, 0x00, 0xFF},
{826, 0x01, 0x01, 0x00, 0x00, 0x00},
{1046, 0x00, 0x00, 0xFF, 0x00, 0x00},
{1296, 0x00, 0x00, 0x00, 0x00, 0x00},
{1513, 0x01, 0x01, 0x00, 0x00, 0xFF},
{1763, 0x01, 0x01, 0x00, 0x00, 0x00},
{1983, 0x00, 0x00, 0xFF, 0x00, 0x00},
{2233, 0x00, 0x00, 0x00, 0x00, 0x00},
{2450, 0x01, 0x01, 0x00, 0x00, 0xFF},
{2700, 0x01, 0x01, 0x00, 0x00, 0x00},
{2920, 0x00, 0x00, 0xFF, 0x00, 0x00},
{3170, 0x00, 0x00, 0x00, 0x00, 0x00},
{3387, 0x01, 0x01, 0x00, 0x00, 0xFF},
{3637, 0x01, 0x01, 0x00, 0x00, 0x00},
{3857, 0x00, 0x00, 0xFF, 0x00, 0x00},
{4107, 0x00, 0x00, 0x00, 0x00, 0x00},
{4324, 0x01, 0x01, 0x00, 0x00, 0xFF},
{4574, 0x01, 0x01, 0x00, 0x00, 0x00},
{4794, 0x00, 0x00, 0xFF, 0x00, 0x00},
{5044, 0x00, 0x00, 0x00, 0x00, 0x00},
{5261, 0x01, 0x01, 0x00, 0x00, 0xFF},
{5511, 0x01, 0x01, 0x00, 0x00, 0x00},
{5731, 0x00, 0x00, 0xFF, 0x00, 0x00},
{5981, 0x00, 0x00, 0x00, 0x00, 0x00},
{6198, 0x01, 0x01, 0x00, 0x00, 0xFF},
{6448, 0x01, 0x01, 0x00, 0x00, 0x00},
{6668, 0x00, 0x00, 0xFF, 0x00, 0x00},
{6918, 0x00, 0x00, 0x00, 0x00, 0x00},
{7135, 0x01, 0x01, 0x00, 0x00, 0xFF},
{7385, 0x01, 0x01, 0x00, 0x00, 0x00},
{7605, 0x00, 0x00, 0xFF, 0x00, 0x00},
{7855, 0x00, 0x00, 0x00, 0x00, 0x00},
{8072, 0x01, 0x01, 0x00, 0x00, 0xFF},
{8322, 0x01, 0x01, 0x00, 0x00, 0x00},
{8542, 0x00, 0x00, 0xFF, 0x00, 0x00},
{8792, 0x00, 0x00, 0x00, 0x00, 0x00},
{9009, 0x01, 0x01, 0x00, 0x00, 0xFF},
{9259, 0x01, 0x01, 0x00, 0x00, 0x00},
{9479, 0x00, 0x00, 0xFF, 0x00, 0x00},
{9729, 0x00, 0x00, 0x00, 0x00, 0x00},
{9946, 0x01, 0x01, 0x00, 0x00, 0xFF},
{10196, 0x01, 0x01, 0x00, 0x00, 0x00},
{10416, 0x00, 0x00, 0xFF, 0x00, 0x00},
{10666, 0x00, 0x00, 0x00, 0x00, 0x00},
{10883, 0x01, 0x01, 0x00, 0x00, 0xFF},
{11133, 0x01, 0x01, 0x00, 0x00, 0x00},
{11353, 0x00, 0x00, 0xFF, 0x00, 0x00},
{11603, 0x00, 0x00, 0x00, 0x00, 0x00},
{11820, 0x01, 0x01, 0x00, 0x00, 0xFF},
{12070, 0x01, 0x01, 0x00, 0x00, 0x00},
{12290, 0x00, 0x00, 0xFF, 0x00, 0x00},
{12540, 0x00, 0x00, 0x00, 0x00, 0x00},
{12757, 0x01, 0x01, 0x00, 0x00, 0xFF},
{13007, 0x01, 0x01, 0x00, 0x00, 0x00},
{13227, 0x00, 0x00, 0xFF, 0x00, 0x00},
{13477, 0x00, 0x00, 0x00, 0x00, 0x00},
{13694, 0x01, 0x01, 0x00, 0x00, 0xFF},
{13944, 0x01, 0x01, 0x00, 0x00, 0x00},
{14164, 0x00, 0x00, 0xFF, 0x00, 0x00},
{14414, 0x00, 0x00, 0x00, 0x00, 0x00},
{14631, 0x01, 0x01, 0x00, 0x00, 0xFF},
{14881, 0x01, 0x01, 0x00, 0x00, 0x00},
{15101, 0x00, 0x00, 0xFF, 0x00, 0x00},
{15260, 0x02, 0x04, 0x00, 0x00, 0x00},
{15349, 0x02, 0x04, 0x00, 0x0A, 0x00},
{15351, 0x00, 0x00, 0x00, 0x00, 0x00},
{15438, 0x02, 0x04, 0x00, 0x15, 0x00},
{15527, 0x02, 0x04, 0x00, 0x1F, 0x00},
{15568, 0x01, 0x01, 0x00, 0x00, 0xFF},
{15616, 0x02, 0x04, 0x00, 0x2A, 0x00},
{15705, 0x02, 0x04, 0x00, 0x33, 0x00},
{15794, 0x02, 0x04, 0x00, 0x3F, 0x00},
{15818, 0x01, 0x01, 0x00, 0x00, 0x00},
{15883, 0x02, 0x04, 0x00, 0x55, 0x00},
{15972, 0x02, 0x04, 0x00, 0x55, 0x00},
{16038, 0x00, 0x00, 0xFF, 0x00, 0x00},
{16061, 0x02, 0x04, 0x00, 0x7F, 0x00},
{16150, 0x02, 0x04, 0x00, 0x7F, 0x00},
{16239, 0x02, 0x04, 0x00, 0x7F, 0x00},
{16288, 0x00, 0x00, 0x00, 0x00, 0x00},
{16328, 0x02, 0x04, 0x00, 0x7F, 0x00},
{16417, 0x02, 0x04, 0x00, 0xFF, 0x00},
{16505, 0x01, 0x01, 0x00, 0x00, 0xFF},
{16506, 0x02, 0x04, 0x00, 0xFF, 0x00},
{16595, 0x02, 0x04, 0x00, 0xFF, 0x00},
{16684, 0x02, 0x04, 0x00, 0xFF, 0x00},
{16755, 0x01, 0x01, 0x00, 0x00, 0x00},
{16773, 0x02, 0x04, 0x00, 0xFF, 0x00},
{16862, 0x02, 0x04, 0x00, 0xFF, 0x00},
{16951, 0x02, 0x04, 0x00, 0xFF, 0x00},
{16975, 0x00, 0x00, 0xFF, 0x00, 0x00},
{17040, 0x02, 0x04, 0x00, 0xFF, 0x00},
{17129, 0x02, 0x04, 0x00, 0xFF, 0x00},
{17141, 0x05, 0x07, 0x00, 0x00, 0x00},
{17215, 0x05, 0x07, 0x0A, 0x00, 0x0A},
{17218, 0x02, 0x04, 0x00, 0xFF, 0x00},
{17225, 0x00, 0x00, 0x00, 0x00, 0x00},
{17289, 0x05, 0x07, 0x15, 0x00, 0x15},
{17307, 0x02, 0x04, 0x00, 0xFF, 0x00},
{17363, 0x05, 0x07, 0x1F, 0x00, 0x1F},
{17396, 0x02, 0x04, 0x00, 0xFF, 0x00},
{17437, 0x05, 0x07, 0x2A, 0x00, 0x2A},
{17442, 0x01, 0x01, 0x00, 0x00, 0xFF},
{17485, 0x02, 0x04, 0x00, 0xFF, 0x00},
{17511, 0x05, 0x07, 0x33, 0x00, 0x33},
{17585, 0x05, 0x07, 0x3F, 0x00, 0x3F},
{17659, 0x05, 0x07, 0x55, 0x00, 0x55},
{17692, 0x01, 0x01, 0x00, 0x00, 0x00},
{17733, 0x05, 0x07, 0x55, 0x00, 0x55},
{17807, 0x05, 0x07, 0x7F, 0x00, 0x7F},
{17881, 0x05, 0x07, 0x7F, 0x00, 0x7F},
{17912, 0x00, 0x00, 0xFF, 0x00, 0x00},
{17955, 0x05, 0x07, 0x7F, 0x00, 0x7F},
{18029, 0x05, 0x07, 0x7F, 0x00, 0x7F},
{18070, 0x08, 0x0A, 0x00, 0x00, 0x00},
{18103, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18147, 0x08, 0x0A, 0x0A, 0x00, 0x00},
{18162, 0x00, 0x00, 0x00, 0x00, 0x00},
{18177, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18224, 0x08, 0x0A, 0x15, 0x00, 0x00},
{18251, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18301, 0x08, 0x0A, 0x1F, 0x00, 0x00},
{18325, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18378, 0x08, 0x0A, 0x2A, 0x00, 0x00},
{18379, 0x01, 0x01, 0x00, 0x00, 0xFF},
{18399, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18455, 0x08, 0x0A, 0x33, 0x00, 0x00},
{18473, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18532, 0x08, 0x0A, 0x3F, 0x00, 0x00},
{18547, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18609, 0x08, 0x0A, 0x55, 0x00, 0x00},
{18621, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18629, 0x01, 0x01, 0x00, 0x00, 0x00},
{18669, 0x0B, 0x0D, 0x00, 0x00, 0x00},
{18686, 0x08, 0x0A, 0x55, 0x00, 0x00},
{18695, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18762, 0x0B, 0x0D, 0x00, 0x00, 0x0A},
{18763, 0x08, 0x0A, 0x7F, 0x00, 0x00},
{18769, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18840, 0x08, 0x0A, 0x7F, 0x00, 0x00},
{18843, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18849, 0x00, 0x00, 0xFF, 0x00, 0x00},
{18855, 0x0B, 0x0D, 0x00, 0x00, 0x15},
{18917, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18917, 0x08, 0x0A, 0x7F, 0x00, 0x00},
{18948, 0x0B, 0x0D, 0x00, 0x00, 0x1F},
{18991, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{18994, 0x08, 0x0A, 0x7F, 0x00, 0x00},
{19041, 0x0B, 0x0D, 0x00, 0x00, 0x2A},
{19071, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19099, 0x00, 0x00, 0x00, 0x00, 0x00},
{19134, 0x0B, 0x0D, 0x00, 0x00, 0x33},
{19148, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19225, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19227, 0x0B, 0x0D, 0x00, 0x00, 0x3F},
{19302, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19316, 0x01, 0x01, 0x00, 0x00, 0xFF},
{19320, 0x0B, 0x0D, 0x00, 0x00, 0x55},
{19379, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19413, 0x0B, 0x0D, 0x00, 0x00, 0x55},
{19456, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19506, 0x0B, 0x0D, 0x00, 0x00, 0x7F},
{19533, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19566, 0x01, 0x01, 0x00, 0x00, 0x00},
{19599, 0x0B, 0x0D, 0x00, 0x00, 0x7F},
{19610, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19687, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19692, 0x0B, 0x0D, 0x00, 0x00, 0x7F},
{19764, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19785, 0x0B, 0x0D, 0x00, 0x00, 0x7F},
{19786, 0x00, 0x00, 0xFF, 0x00, 0x00},
{19841, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19878, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{19918, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{19971, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{19995, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{20036, 0x00, 0x00, 0x00, 0x00, 0x00},
{20064, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{20157, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{20250, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{20253, 0x01, 0x01, 0x00, 0x00, 0xFF},
{20343, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{20436, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{20503, 0x01, 0x01, 0x00, 0x00, 0x00},
{20529, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{20622, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{20715, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{20723, 0x00, 0x00, 0xFF, 0x00, 0x00},
{20808, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{20901, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{20973, 0x00, 0x00, 0x00, 0x00, 0x00},
{20994, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{21190, 0x01, 0x01, 0x00, 0x00, 0xFF},
{21440, 0x01, 0x01, 0x00, 0x00, 0x00},
{21660, 0x00, 0x00, 0xFF, 0x00, 0x00},
{21910, 0x00, 0x00, 0x00, 0x00, 0x00},
{22127, 0x01, 0x01, 0x00, 0x00, 0xFF},
{22377, 0x01, 0x01, 0x00, 0x00, 0x00},
{22500, 0x00, 0x18, 0x00, 0x00, 0x00},
{22597, 0x00, 0x00, 0xFF, 0x00, 0x00},
{22807, 0x02, 0x04, 0x00, 0x00, 0x00},
{22847, 0x00, 0x00, 0x00, 0x00, 0x00},
{22914, 0x02, 0x04, 0x00, 0x0A, 0x00},
{23021, 0x02, 0x04, 0x00, 0x15, 0x00},
{23064, 0x01, 0x01, 0x00, 0x00, 0xFF},
{23128, 0x02, 0x04, 0x00, 0x1F, 0x00},
{23235, 0x02, 0x04, 0x00, 0x2A, 0x00},
{23314, 0x01, 0x01, 0x00, 0x00, 0x00},
{23342, 0x02, 0x04, 0x00, 0x33, 0x00},
{23449, 0x02, 0x04, 0x00, 0x3F, 0x00},
{23534, 0x00, 0x00, 0xFF, 0x00, 0x00},
{23556, 0x02, 0x04, 0x00, 0x55, 0x00},
{23663, 0x02, 0x04, 0x00, 0x55, 0x00},
{23770, 0x02, 0x04, 0x00, 0x7F, 0x00},
{23784, 0x00, 0x00, 0x00, 0x00, 0x00},
{23877, 0x02, 0x04, 0x00, 0x7F, 0x00},
{23984, 0x02, 0x04, 0x00, 0x7F, 0x00},
{24001, 0x01, 0x01, 0x00, 0x00, 0xFF},
{24091, 0x02, 0x04, 0x00, 0x7F, 0x00},
{24198, 0x02, 0x04, 0x00, 0xFF, 0x00},
{24251, 0x01, 0x01, 0x00, 0x00, 0x00},
{24305, 0x02, 0x04, 0x00, 0xFF, 0x00},
{24412, 0x02, 0x04, 0x00, 0xFF, 0x00},
{24471, 0x00, 0x00, 0xFF, 0x00, 0x00},
{24519, 0x02, 0x04, 0x00, 0xFF, 0x00},
{24626, 0x02, 0x04, 0x00, 0xFF, 0x00},
{24688, 0x05, 0x07, 0x00, 0x00, 0x00},
{24721, 0x00, 0x00, 0x00, 0x00, 0x00},
{24733, 0x02, 0x04, 0x00, 0xFF, 0x00},
{24780, 0x05, 0x07, 0x0A, 0x00, 0x0A},
{24840, 0x02, 0x04, 0x00, 0xFF, 0x00},
{24872, 0x05, 0x07, 0x15, 0x00, 0x15},
{24938, 0x01, 0x01, 0x00, 0x00, 0xFF},
{24947, 0x02, 0x04, 0x00, 0xFF, 0x00},
{24964, 0x05, 0x07, 0x1F, 0x00, 0x1F},
{25054, 0x02, 0x04, 0x00, 0xFF, 0x00},
{25056, 0x05, 0x07, 0x2A, 0x00, 0x2A},
{25148, 0x05, 0x07, 0x33, 0x00, 0x33},
{25161, 0x02, 0x04, 0x00, 0xFF, 0x00},
{25188, 0x01, 0x01, 0x00, 0x00, 0x00},
{25240, 0x05, 0x07, 0x3F, 0x00, 0x3F},
{25268, 0x02, 0x04, 0x00, 0xFF, 0x00},
{25332, 0x05, 0x07, 0x55, 0x00, 0x55},
{25375, 0x02, 0x04, 0x00, 0xFF, 0x00},
{25408, 0x00, 0x00, 0xFF, 0x00, 0x00},
{25424, 0x05, 0x07, 0x55, 0x00, 0x55},
{25482, 0x02, 0x04, 0x00, 0xFF, 0x00},
{25516, 0x05, 0x07, 0x7F, 0x00, 0x7F},
{25608, 0x05, 0x07, 0x7F, 0x00, 0x7F},
{25617, 0x08, 0x0A, 0x00, 0x00, 0x00},
{25658, 0x00, 0x00, 0x00, 0x00, 0x00},
{25700, 0x05, 0x07, 0x7F, 0x00, 0x7F},
{25712, 0x08, 0x0A, 0x0A, 0x00, 0x00},
{25792, 0x05, 0x07, 0x7F, 0x00, 0x7F},
{25807, 0x08, 0x0A, 0x15, 0x00, 0x00},
{25875, 0x01, 0x01, 0x00, 0x00, 0xFF},
{25884, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{25902, 0x08, 0x0A, 0x1F, 0x00, 0x00},
{25976, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{25997, 0x08, 0x0A, 0x2A, 0x00, 0x00},
{26068, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26092, 0x08, 0x0A, 0x33, 0x00, 0x00},
{26125, 0x01, 0x01, 0x00, 0x00, 0x00},
{26160, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26187, 0x08, 0x0A, 0x3F, 0x00, 0x00},
{26216, 0x0B, 0x0D, 0x00, 0x00, 0x00},
{26252, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26282, 0x08, 0x0A, 0x55, 0x00, 0x00},
{26327, 0x0B, 0x0D, 0x00, 0x00, 0x0A},
{26344, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26345, 0x00, 0x00, 0xFF, 0x00, 0x00},
{26377, 0x08, 0x0A, 0x55, 0x00, 0x00},
{26436, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26438, 0x0B, 0x0D, 0x00, 0x00, 0x15},
{26472, 0x08, 0x0A, 0x7F, 0x00, 0x00},
{26528, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26549, 0x0B, 0x0D, 0x00, 0x00, 0x1F},
{26567, 0x08, 0x0A, 0x7F, 0x00, 0x00},
{26595, 0x00, 0x00, 0x00, 0x00, 0x00},
{26620, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26660, 0x0B, 0x0D, 0x00, 0x00, 0x2A},
{26662, 0x08, 0x0A, 0x7F, 0x00, 0x00},
{26712, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26757, 0x08, 0x0A, 0x7F, 0x00, 0x00},
{26771, 0x0B, 0x0D, 0x00, 0x00, 0x33},
{26804, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26812, 0x01, 0x01, 0x00, 0x00, 0xFF},
{26852, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{26882, 0x0B, 0x0D, 0x00, 0x00, 0x3F},
{26896, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26947, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{26988, 0x05, 0x07, 0xFF, 0x00, 0xFF},
{26993, 0x0B, 0x0D, 0x00, 0x00, 0x55},
{27042, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27062, 0x01, 0x01, 0x00, 0x00, 0x00},
{27104, 0x0B, 0x0D, 0x00, 0x00, 0x55},
{27137, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27215, 0x0B, 0x0D, 0x00, 0x00, 0x7F},
{27232, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27282, 0x00, 0x00, 0xFF, 0x00, 0x00},
{27326, 0x0B, 0x0D, 0x00, 0x00, 0x7F},
{27327, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27422, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27437, 0x0B, 0x0D, 0x00, 0x00, 0x7F},
{27517, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27532, 0x00, 0x00, 0x00, 0x00, 0x00},
{27548, 0x0B, 0x0D, 0x00, 0x00, 0x7F},
{27612, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27659, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{27707, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27749, 0x01, 0x01, 0x00, 0x00, 0xFF},
{27770, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{27802, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27881, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{27897, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27992, 0x08, 0x0A, 0xFF, 0x00, 0x00},
{27992, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{27999, 0x01, 0x01, 0x00, 0x00, 0x00},
{28103, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{28214, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{28219, 0x00, 0x00, 0xFF, 0x00, 0x00},
{28325, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{28436, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{28469, 0x00, 0x00, 0x00, 0x00, 0x00},
{28547, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{28658, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{28686, 0x01, 0x01, 0x00, 0x00, 0xFF},
{28769, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{28880, 0x0B, 0x0D, 0x00, 0x00, 0xFF},
{28936, 0x01, 0x01, 0x00, 0x00, 0x00},
{28991, 0x0B, 0x0D, 0x00, 0x00, 0xFF}
};

#define NUM_OF_OPERATIONS sizeof(operations) / sizeof(OPERATION)


void setup() {
  strip.begin();
  strip.show(); // Initialize all pixels to 'off'
  Serial.begin(9600);
  Serial.print("Ready ...");
  Serial.print("Number of Operations:");
  Serial.println(NUM_OF_OPERATIONS);
  Serial.println(1);
  delay(1000);
  Serial.println(2);
  delay(1000);
  Serial.println(3);
  delay(1000);  
  Serial.println("Go!");
}


void loop() {
  uint32_t tickDrift = millis();
  
  for(uint32_t i = 0; i < NUM_OF_OPERATIONS; i++) {  
    OPERATION op;
    memcpy_P (&op, &operations[i], sizeof (OPERATION));

    if (op.tick != 0) {
      uint32_t tick = millis() - tickDrift;
      uint32_t delayTimeInMs = op.tick - tick;

      delay(delayTimeInMs);
    }
      
    for(byte j = op.saddr; j <= op.eaddr; j++) {
      strip.setPixelColor(j, op.r, op.g, op.b); 
    }

    strip.show();
  }
}

